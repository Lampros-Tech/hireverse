/**
 * ColumnDescriptor gives metadata about a colum (name, type)
 */
export interface ColumnDescriptor {
    name: string;
}
export interface Column extends Array<any> {
    [index: number]: ColumnDescriptor;
}
export interface Row extends Array<any> {
    [index: number]: string | number;
}
export interface ReadQueryResult {
    columns: Array<Column>;
    rows: Array<Row>;
}
declare function checkAuthorizedList(): Promise<boolean>;
declare function createTable(query: string, tableId: string, options: any): Promise<any>;
declare function runQuery(query: string, tableId: string): Promise<ReadQueryResult>;
export interface TableMetadata {
    id: string;
    type: string;
}
declare function myTables(): Promise<TableMetadata[]>;
export { createTable, runQuery, myTables, checkAuthorizedList };
