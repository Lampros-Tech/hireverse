import { __awaiter } from "tslib";
import { getSigner, getHost, getToken } from "./single.js";
function SendCall(rpcBody) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield fetch(`${getHost()}/rpc`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${(yield getToken()).token}`,
            },
            body: JSON.stringify(rpcBody),
        }).then((r) => r.json());
    });
}
function GeneralizedRPC(method, statement, tableId, options) {
    return __awaiter(this, void 0, void 0, function* () {
        const signer = yield getSigner();
        const address = yield signer.getAddress();
        const params = [
            {
                statement: statement,
                tableId: tableId,
                controller: address,
                type: options === null || options === void 0 ? void 0 : options.type,
            },
        ];
        return {
            jsonrpc: "2.0",
            method: `tableland_${method}`,
            id: 1,
            params,
        };
    });
}
function checkAuthorizedList() {
    return __awaiter(this, void 0, void 0, function* () {
        const authorized = yield SendCall(yield GeneralizedRPC("authorize", "", "")).then((r) => {
            return r.status === 200;
        });
        return authorized;
    });
}
function createTable(query, tableId, options) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield SendCall(yield GeneralizedRPC("createTable", query, tableId.slice(2), options));
    });
}
function runQuery(query, tableId) {
    return __awaiter(this, void 0, void 0, function* () {
        // Validation here?
        return yield SendCall(yield GeneralizedRPC("runSQL", query, tableId));
    });
}
function myTables() {
    return __awaiter(this, void 0, void 0, function* () {
        const signer = yield getSigner();
        const address = yield signer.getAddress();
        const host = yield getHost();
        const resp = yield fetch(`${host}/tables/controller/${address}`).then((r) => r.json());
        return resp;
    });
}
export { createTable, runQuery, myTables, checkAuthorizedList };
//# sourceMappingURL=tableland-calls.js.map