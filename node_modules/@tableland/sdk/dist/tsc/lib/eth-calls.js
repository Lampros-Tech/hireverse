import { __awaiter } from "tslib";
// eslint-disable-next-line camelcase
import { Registry__factory } from "@textile/eth-tableland";
import { v4 } from "uuid";
import { getSigner } from "./single.js";
function registerTable() {
    return __awaiter(this, void 0, void 0, function* () {
        const signer = yield getSigner();
        const address = yield signer.getAddress();
        const contract = Registry__factory.connect(
        // TODO: Extra to abstraction
        "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512", signer);
        const uuid = "0x" + v4().replace(/-/g, "");
        /* Kill this */
        localStorage.setItem(uuid, "mine");
        const tx = yield contract.mintOne(address, uuid);
        setTimeout(() => __awaiter(this, void 0, void 0, function* () {
            console.log(yield contract.balanceOf(address, uuid));
        }), 30000);
        const receipt = yield tx.wait();
        return {
            receipt,
            tableId: uuid,
        };
    });
}
function doIOwn(tableId) {
    return __awaiter(this, void 0, void 0, function* () {
        const signer = yield getSigner();
        const address = yield signer.getAddress();
        const contract = Registry__factory.connect(
        // TODO: Extra to abstraction
        "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512", signer);
        const res = contract.balanceOf(address, tableId);
        console.log(res);
        return false;
    });
}
export { registerTable, doIOwn };
//# sourceMappingURL=eth-calls.js.map